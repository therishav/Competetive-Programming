#include <bits/stdc++.h>
using namespace std;

// returns true if the string is a panagram else false
void checkPanagram(string& str) {
  // create a hash table to mark the characters present in the string
  vector<bool> mark(26, false);

  // for indexing mark
  int index;

  // traverse all characters
  for (int i = 0; i < str.size(); i++) {

    // if uppercase character
    // substract 'A' to find index
    if ('A' <= str[i] && 'Z' >= str[i])
      index = str[i] - 'A';

    // If lower case character then substract 'a' to find index
    else if ('a' <= str[i] && 'z' >= str[i])
      index = str[i] - 'a';

    // If this character is other than english lowercase and uppercase characters
    else
      continue;
    mark[index] = true;
  }

  // print not panagram if any character is unmarked and also print the missing alphabets
  for (int i = 0; i <= 25; i++) {
    if (mark[i] == false) {
      cout << "missing ";
      for (int j = 0; j <= 25; j++) {
	if (mark[j] == false)
	  cout << char(j+97);
      }
      cout << '\n';
      return;
    }
  }
  cout << "panagram" << '\n';
}

// driver program to check the above functions
int main(int argc, char *argv[])
{
  int t;
  cin >> t;
  while(t--) {
    string s;
    getline(cin, s);
    cout << s << endl;
  }
}
